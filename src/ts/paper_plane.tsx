/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/paper_plane.glb --types --output src/ts/paper_plane.tsx 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
  }
  materials: {}

}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>


export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/paper_plane.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>

      <mesh geometry={nodes.Plane.geometry}>
        <meshStandardMaterial color={"#fcf3ea"} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/paper_plane.glb')
